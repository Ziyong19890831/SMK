// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMK.Data;

namespace SMK.Data.Migrations
{
    [DbContext(typeof(SMKWEBContext))]
    [Migration("20200429201558_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SMK.Data.Models.GenBranch", b =>
                {
                    b.Property<string>("BranchNo")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("BranchName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("BranchNo")
                        .HasName("PK_GenBranch_1");

                    b.ToTable("GenBranch");
                });

            modelBuilder.Entity("SMK.Data.Models.GenEmpData", b =>
                {
                    b.Property<string>("EmpNo")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("LoginId")
                        .HasColumnName("LoginID")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LoginPwd")
                        .HasColumnName("LoginPWD")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("EmpNo");

                    b.ToTable("GenEmpData");
                });

            modelBuilder.Entity("SMK.Data.Models.GenEndReason", b =>
                {
                    b.Property<string>("EndReasonNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("EndReasonName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("EndReasonNo")
                        .HasName("PK_GenEndReason_1");

                    b.ToTable("GenEndReason");
                });

            modelBuilder.Entity("SMK.Data.Models.GenHospCont", b =>
                {
                    b.Property<string>("HospContType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospContName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("HospContType")
                        .HasName("PK_GenHospCont_1");

                    b.ToTable("GenHospCont");
                });

            modelBuilder.Entity("SMK.Data.Models.GenLicenceType", b =>
                {
                    b.Property<string>("LicenceType")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("LicenceName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("LicenceType")
                        .HasName("PK_GenLicenceType_1");

                    b.ToTable("GenLicenceType");
                });

            modelBuilder.Entity("SMK.Data.Models.GenProgramData", b =>
                {
                    b.Property<string>("ProNo")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ProName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("QueryParams")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ProNo");

                    b.ToTable("GenProgramData");
                });

            modelBuilder.Entity("SMK.Data.Models.GenPrsnType", b =>
                {
                    b.Property<string>("PrsnType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PrsnTypeName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("PrsnType")
                        .HasName("PK_GenPrsnType_1");

                    b.ToTable("GenPrsnType");
                });

            modelBuilder.Entity("SMK.Data.Models.GenSmkcontract", b =>
                {
                    b.Property<string>("SmkcontractType")
                        .HasColumnName("SMKContractType")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("SmkcontractName")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMKContractName")
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("SmkcontractType")
                        .HasName("PK_GenSMKContract_1");

                    b.ToTable("GenSMKContract");
                });

            modelBuilder.Entity("SMK.Data.Models.GenSpecial", b =>
                {
                    b.Property<string>("SpecialistNo")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("SpecialistName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("SpecialistNo")
                        .HasName("PK_GenSpecial_2");

                    b.ToTable("GenSpecial");
                });

            modelBuilder.Entity("SMK.Data.Models.HospBasic", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("BranchNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg1")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg2")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg3")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Contact1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("Contact2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("ContactEmail1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ContactEmail2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ContactFax1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ContactFax2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ContactTel1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ContactTel2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("DivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("FirstHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FirstHospID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FirstHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospAbbr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<string>("HospAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(80)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("HospEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HospFax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HospName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(80);

                    b.Property<string>("HospOwnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HospOwnID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospOwnName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("HospStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospTel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("LastContType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("LastHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastHospID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LastHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("PrevHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrevHospID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PrevHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SubDivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ZIP")
                        .HasColumnType("char(5)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("HospId", "HospSeqNo")
                        .HasName("PK_SMKHospBasic");

                    b.ToTable("HospBasic");
                });

            modelBuilder.Entity("SMK.Data.Models.HospContract", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("SmkcontractType")
                        .HasColumnName("SMKContractType")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospStartDate")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("EndReasonNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("HospId", "HospSeqNo", "SmkcontractType", "HospStartDate");

                    b.ToTable("HospContract");
                });

            modelBuilder.Entity("SMK.Data.Models.PrsnBasic", b =>
                {
                    b.Property<string>("PrsnId")
                        .HasColumnName("PrsnID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("MajorSpecialistNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(5)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("PrsnBirthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("PrsnName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("PrsnType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SubSpecialistNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(5)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("PrsnId");

                    b.ToTable("PrsnBasic");
                });
#pragma warning restore 612, 618
        }
    }
}
