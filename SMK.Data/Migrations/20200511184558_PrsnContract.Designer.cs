// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMK.Data;

namespace SMK.Data.Migrations
{
    [DbContext(typeof(SMKWEBContext))]
    [Migration("20200511184558_PrsnContract")]
    partial class PrsnContract
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SMK.Data.Entity.AuditLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ActionRemark")
                        .HasColumnName("ActionRemark")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("ActionTypeStr")
                        .HasColumnName("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRecord")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(511)")
                        .HasMaxLength(511);

                    b.Property<string>("InvolvedColumns")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("OriginalRecord")
                        .HasColumnType("text");

                    b.Property<string>("RecordId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("SourceTable")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Account");

                    b.HasIndex("RecordId");

                    b.HasIndex("SourceTable");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenBranch", b =>
                {
                    b.Property<string>("BranchNo")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("BranchName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("BranchNo")
                        .HasName("PK_GenBranch_1");

                    b.ToTable("GenBranch");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenEmpData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pwd")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique()
                        .HasFilter("[Account] IS NOT NULL");

                    b.ToTable("GenEmpData");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            Account = "Admin",
                            CreatedAt = new DateTime(2020, 5, 12, 2, 45, 57, 681, DateTimeKind.Local).AddTicks(2942),
                            Enable = true,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "系統管理員",
                            Pwd = "ZHACEBb7ESmBmYj7XqLotw=="
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.GenEndReason", b =>
                {
                    b.Property<string>("EndReasonNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("EndReasonName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("EndReasonNo")
                        .HasName("PK_GenEndReason_1");

                    b.ToTable("GenEndReason");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenHospCont", b =>
                {
                    b.Property<string>("HospContType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospContName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("HospContType")
                        .HasName("PK_GenHospCont_1");

                    b.ToTable("GenHospCont");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenLicenceType", b =>
                {
                    b.Property<string>("LicenceType")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("LicenceName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("LicenceType")
                        .HasName("PK_GenLicenceType_1");

                    b.ToTable("GenLicenceType");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenPrsnType", b =>
                {
                    b.Property<string>("PrsnType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PrsnTypeName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("PrsnType")
                        .HasName("PK_GenPrsnType_1");

                    b.ToTable("GenPrsnType");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenSmkcontract", b =>
                {
                    b.Property<string>("SmkcontractType")
                        .HasColumnName("SMKContractType")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("SmkcontractName")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMKContractName")
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("SmkcontractType")
                        .HasName("PK_GenSMKContract_1");

                    b.ToTable("GenSMKContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenSpecial", b =>
                {
                    b.Property<string>("SpecialistNo")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("SpecialistName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("SpecialistNo")
                        .HasName("PK_GenSpecial_2");

                    b.ToTable("GenSpecial");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospBasic", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("BranchNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg1")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg2")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg3")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Contact1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("Contact2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("ContactEmail1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ContactEmail2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ContactFax1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ContactFax2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ContactTel1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ContactTel2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("DivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("FirstHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FirstHospID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FirstHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospAbbr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<string>("HospAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(80)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("HospEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HospFax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HospName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(80);

                    b.Property<string>("HospOwnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HospOwnID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospOwnName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("HospStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospTel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("LastContType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("LastHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastHospID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LastHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("PrevHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrevHospID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PrevHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SubDivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ZIP")
                        .HasColumnType("char(5)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("HospId", "HospSeqNo")
                        .HasName("PK_SMKHospBasic");

                    b.ToTable("HospBasic");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospContract", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("SmkcontractType")
                        .HasColumnName("SMKContractType")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospStartDate")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("EndReasonNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("HospId", "HospSeqNo", "SmkcontractType", "HospStartDate");

                    b.ToTable("HospContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.Privilege", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkTypeStr")
                        .HasColumnName("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("QueryParams")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Privilege");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnBasic", b =>
                {
                    b.Property<string>("PrsnId")
                        .HasColumnName("PrsnID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("MajorSpecialistNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(5)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("PrsnBirthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("PrsnName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("PrsnType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SubSpecialistNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(5)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("PrsnId");

                    b.ToTable("PrsnBasic");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnContract", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("PrsnId")
                        .HasColumnName("PrsnID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("SmkcontractType")
                        .HasColumnName("SMKContractType")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PrsnStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("CouldInstruct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CouldTreat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("PrsnEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("HospId", "HospSeqNo", "PrsnId", "SmkcontractType", "PrsnStartDate");

                    b.ToTable("PrsnContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            CreatedAt = new DateTime(2020, 5, 12, 2, 45, 57, 683, DateTimeKind.Local).AddTicks(1565),
                            Name = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.RoleEmpMapping", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("EmpId", "RoleId")
                        .IsUnique()
                        .HasFilter("[EmpId] IS NOT NULL AND [RoleId] IS NOT NULL");

                    b.ToTable("RoleEmpMapping");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            CreatedAt = new DateTime(2020, 5, 12, 2, 45, 57, 683, DateTimeKind.Local).AddTicks(3137),
                            EmpId = "00000000-0000-0000-0000-000000000000",
                            RoleId = "00000000-0000-0000-0000-000000000000"
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.RolePrivilegeMapping", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EnableEntry")
                        .HasColumnType("bit");

                    b.Property<string>("PrivilegeId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("PrivilegeId", "RoleId")
                        .IsUnique()
                        .HasFilter("[PrivilegeId] IS NOT NULL AND [RoleId] IS NOT NULL");

                    b.ToTable("RolePrivilegeMapping");
                });
#pragma warning restore 612, 618
        }
    }
}
