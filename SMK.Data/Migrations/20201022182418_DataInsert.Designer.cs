// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMK.Data;

namespace SMK.Data.Migrations
{
    [DbContext(typeof(SMKWEBContext))]
    [Migration("20201022182418_DataInsert")]
    partial class DataInsert
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SMK.Data.Entity.AuditLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ActionRemark")
                        .HasColumnName("ActionRemark")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("ActionTypeStr")
                        .HasColumnName("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentRecord")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(511)")
                        .HasMaxLength(511);

                    b.Property<string>("InvolvedColumns")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("OriginalRecord")
                        .HasColumnType("text");

                    b.Property<string>("RecordId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("SourceTable")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Account");

                    b.HasIndex("RecordId");

                    b.HasIndex("SourceTable");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("SMK.Data.Entity.DataInsert", b =>
                {
                    b.Property<string>("ISNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RecordCount")
                        .HasColumnType("int");

                    b.HasKey("ISNO");

                    b.ToTable("DataInsert");
                });

            modelBuilder.Entity("SMK.Data.Entity.DtlWithSet", b =>
                {
                    b.Property<int?>("ApplDot")
                        .HasColumnName("Appl_Dot")
                        .HasColumnType("int");

                    b.Property<string>("Birthday")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Bupropion")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Correction")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("DataId")
                        .IsRequired()
                        .HasColumnName("Data_ID")
                        .HasColumnType("char(28)")
                        .IsFixedLength(true)
                        .HasMaxLength(28)
                        .IsUnicode(false);

                    b.Property<string>("DentistTreat")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("DispensingFee")
                        .HasColumnType("int");

                    b.Property<string>("DrTreat")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Drug")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("DrugDays")
                        .HasColumnName("Drug_Days")
                        .HasColumnType("int");

                    b.Property<int?>("DrugFee")
                        .HasColumnType("int");

                    b.Property<string>("EduTreat")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("ExamTime")
                        .HasColumnType("int");

                    b.Property<string>("ExamYear")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ExePrsnId")
                        .HasColumnName("ExePrsnID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("ExpDot")
                        .HasColumnName("Exp_Dot")
                        .HasColumnType("int");

                    b.Property<string>("FeeYm")
                        .IsRequired()
                        .HasColumnName("Fee_YM")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("FirstInstructDate")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FirstTreatDate")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FuncDate")
                        .HasColumnName("Func_Date")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FuncMonth")
                        .IsRequired()
                        .HasColumnName("Func_Month")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("FuncType")
                        .HasColumnName("Func_Type")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("GumLozenge")
                        .IsRequired()
                        .HasColumnName("Gum_Lozenge")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospContType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdSex")
                        .HasColumnName("ID_Sex")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("InctructSerial")
                        .HasColumnType("int");

                    b.Property<string>("Inhaler")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("InsQlty")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("InstructApply")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("InstructExamTime")
                        .HasColumnType("int");

                    b.Property<string>("InstructExamYear")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int?>("InstructionFee")
                        .HasColumnType("int");

                    b.Property<string>("LastHospId")
                        .HasColumnName("LastHospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LastHospSeqNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("LowIncome")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("MedApply")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("MedQlty")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("OrigHospId")
                        .HasColumnName("Orig_Hosp_ID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("PartAmt")
                        .HasColumnName("Part_Amt")
                        .HasColumnType("int");

                    b.Property<string>("PartCode")
                        .HasColumnName("Part_Code")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("PatchN")
                        .IsRequired()
                        .HasColumnName("Patch_N")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PatchS")
                        .IsRequired()
                        .HasColumnName("Patch_S")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PharTreat")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PrsnId")
                        .HasColumnName("Prsn_ID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PrsnType")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Referral")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("ReferralFee")
                        .HasColumnType("int");

                    b.Property<string>("RelMode")
                        .HasColumnName("Rel_Mode")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ReleaseApply")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ServiceFee")
                        .HasColumnType("int");

                    b.Property<string>("TraceApply")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("TracingFee")
                        .HasColumnType("int");

                    b.Property<string>("UnCount")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Varenicline")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("Visits")
                        .HasColumnType("int");

                    b.Property<int?>("WeekCount")
                        .HasColumnType("int");

                    b.ToTable("DtlWithSet");
                });

            modelBuilder.Entity("SMK.Data.Entity.FileUploadLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("FileStatusStr")
                        .HasColumnName("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileTypeStr")
                        .HasColumnName("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.ToTable("FileUploadLog");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenBranch", b =>
                {
                    b.Property<string>("BranchNo")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("BranchName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.HasKey("BranchNo")
                        .HasName("PK_GenBranch_1");

                    b.ToTable("GenBranch");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenEmpData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pwd")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique()
                        .HasFilter("[Account] IS NOT NULL");

                    b.ToTable("GenEmpData");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            Account = "Admin",
                            CreatedAt = new DateTime(2020, 10, 23, 2, 24, 17, 294, DateTimeKind.Local).AddTicks(2958),
                            Enable = true,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "系統管理員",
                            Pwd = "ZHACEBb7ESmBmYj7XqLotw=="
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.GenEndReason", b =>
                {
                    b.Property<string>("EndReasonNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("EndReasonName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.HasKey("EndReasonNo")
                        .HasName("PK_GenEndReason_1");

                    b.ToTable("GenEndReason");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenHospCont", b =>
                {
                    b.Property<string>("HospContType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospContName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.HasKey("HospContType")
                        .HasName("PK_GenHospCont_1");

                    b.ToTable("GenHospCont");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenLicenceType", b =>
                {
                    b.Property<string>("LicenceType")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("LicenceName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.HasKey("LicenceType")
                        .HasName("PK_GenLicenceType_1");

                    b.ToTable("GenLicenceType");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenPrsnEndReason", b =>
                {
                    b.Property<string>("EndReasonNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("EndReasonName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.HasKey("EndReasonNo")
                        .HasName("PK_GenPrsnEndReason_1");

                    b.ToTable("GenPrsnEndReason");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenPrsnType", b =>
                {
                    b.Property<string>("PrsnType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PrsnTypeName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.HasKey("PrsnType")
                        .HasName("PK_GenPrsnType_1");

                    b.ToTable("GenPrsnType");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenSmkcontract", b =>
                {
                    b.Property<string>("SmkcontractType")
                        .HasColumnName("SMKContractType")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("SmkcontractName")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMKContractName")
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.HasKey("SmkcontractType")
                        .HasName("PK_GenSMKContract_1");

                    b.ToTable("GenSMKContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenSpecial", b =>
                {
                    b.Property<string>("SpecialistNo")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("SpecialistName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.HasKey("SpecialistNo")
                        .HasName("PK_GenSpecial_2");

                    b.ToTable("GenSpecial");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospBasic", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("BranchNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg1")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg2")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ChFlg3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chFlg3")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Contact1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("Contact2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("ContactEmail1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60);

                    b.Property<string>("ContactEmail2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60);

                    b.Property<string>("ContactFax1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("ContactFax2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("ContactTel1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("ContactTel2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("DivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(2);

                    b.Property<string>("FirstHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FirstHospID")
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<string>("FirstHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(2);

                    b.Property<string>("HospAbbr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<string>("HospAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(80);

                    b.Property<string>("HospEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(60);

                    b.Property<string>("HospFax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("HospName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(80);

                    b.Property<string>("HospOwnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HospOwnID")
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<string>("HospOwnName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("HospStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1);

                    b.Property<string>("HospTel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("LastContType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1);

                    b.Property<string>("LastHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastHospID")
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<string>("LastHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(2);

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("PrevHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrevHospID")
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<string>("PrevHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(2);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<string>("SubDivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<string>("Zip")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ZIP")
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(5);

                    b.HasKey("HospId", "HospSeqNo")
                        .HasName("PK_SMKHospBasic");

                    b.ToTable("HospBasic");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospBscAll", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("BranchNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1);

                    b.Property<string>("ContType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(5);

                    b.Property<string>("HospAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(80);

                    b.Property<string>("HospEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("HospKind")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(5);

                    b.Property<string>("HospName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(80);

                    b.Property<string>("HospTel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("HospTelArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(5);

                    b.Property<string>("HospType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(5);

                    b.HasKey("HospId");

                    b.ToTable("HospBscAll");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("EndReasonNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(2);

                    b.Property<string>("HospEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("HospId")
                        .IsRequired()
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospStartDate")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<string>("SmkcontractType")
                        .HasColumnName("SMKContractType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("HospId", "HospSeqNo", "SmkcontractType", "HospStartDate")
                        .IsUnique()
                        .HasFilter("[SMKContractType] IS NOT NULL AND [HospStartDate] IS NOT NULL");

                    b.ToTable("HospContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniDrDtl", b =>
                {
                    b.Property<string>("DataId")
                        .HasColumnName("data_id")
                        .HasColumnType("varchar(28)")
                        .HasMaxLength(28)
                        .IsUnicode(false);

                    b.Property<string>("FeeYm")
                        .HasColumnName("fee_ym")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("ApplCauseMark")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("appl_cause_mark")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ApplDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("appl_date")
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int?>("ApplDot")
                        .HasColumnName("appl_dot")
                        .HasColumnType("int");

                    b.Property<string>("ApplType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("appl_type")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("AreaService")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("area_service")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("birthday")
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("CaseType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("case_type")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CorrHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("corr_hosp_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("CureDot")
                        .HasColumnName("cure_dot")
                        .HasColumnType("int");

                    b.Property<string>("CureItem1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_item1")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CureItem2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_item2")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CureItem3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_item3")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CureItem4")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_item4")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<int?>("DrugDays")
                        .HasColumnName("drug_days")
                        .HasColumnType("int");

                    b.Property<int?>("DrugDot")
                        .HasColumnName("drug_dot")
                        .HasColumnType("int");

                    b.Property<string>("DrugPrsnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("drug_prsn_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("DsvcCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dsvc_code")
                        .HasColumnType("char(12)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("DsvcDot")
                        .HasColumnName("dsvc_dot")
                        .HasColumnType("int");

                    b.Property<int?>("ExamTime")
                        .HasColumnType("int");

                    b.Property<string>("ExamYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int?>("ExpDot")
                        .HasColumnName("exp_dot")
                        .HasColumnType("int");

                    b.Property<string>("FirstInstructDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FirstTreatDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FuncDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("func_date")
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FuncSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("func_seq_no")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FuncType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("func_type")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Icd10cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd10cm_code2")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd10cmCode3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd10cm_code3")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd10cmCode4")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd10cm_code4")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd9cmCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd9cm_code")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd9cmCode1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd9cm_code1")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd9cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd9cm_code2")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdSex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Sex")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("InctructSerial")
                        .HasColumnType("int");

                    b.Property<string>("InstructApply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("InstructExamTime")
                        .HasColumnType("int");

                    b.Property<string>("InstructExamYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("MedApply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("OrigCaseType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orig_case_type")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("OrigHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orig_hosp_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("OtherPartAmt")
                        .HasColumnName("other_part_amt")
                        .HasColumnType("int");

                    b.Property<int?>("PartAmt")
                        .HasColumnName("part_amt")
                        .HasColumnType("int");

                    b.Property<string>("PartCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("part_code")
                        .HasColumnType("char(3)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("PayType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pay_type")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PrsnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prsn_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("RelDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rel_date")
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("ReleaseApply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("SeqNo")
                        .HasColumnName("seq_no")
                        .HasColumnType("int");

                    b.Property<string>("TraceApply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TranDate")
                        .HasColumnName("tran_date")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int?>("WeekCount")
                        .HasColumnType("int");

                    b.HasKey("DataId", "FeeYm");

                    b.HasIndex("Id", "FeeYm", "HospId", "FuncDate", "Birthday", "MedApply", "WeekCount", "DrugDays", "OrigHospId", "TranDate")
                        .HasName("INX_DrDtl");

                    b.ToTable("iniDrDtl");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniDrOrd", b =>
                {
                    b.Property<string>("DataId")
                        .HasColumnName("data_id")
                        .HasColumnType("varchar(28)")
                        .HasMaxLength(28)
                        .IsUnicode(false);

                    b.Property<int>("OrderSeqNo")
                        .HasColumnName("order_seq_no")
                        .HasColumnType("int");

                    b.Property<string>("FeeYm")
                        .HasColumnName("fee_ym")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("DrugFre")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("drug_fre")
                        .HasColumnType("char(18)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(18)
                        .IsUnicode(false);

                    b.Property<string>("DrugNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("drug_num")
                        .HasColumnType("char(6)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("DrugPath")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("drug_path")
                        .HasColumnType("char(15)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ExePrsnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("exe_prsn_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("OrderCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_code")
                        .HasColumnType("char(12)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("OrderDot")
                        .HasColumnName("order_dot")
                        .HasColumnType("int");

                    b.Property<int?>("OrderDrugDay")
                        .HasColumnName("order_drug_day")
                        .HasColumnType("int");

                    b.Property<decimal?>("OrderQty")
                        .HasColumnName("order_qty")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<string>("OrderType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_type")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("OrderUprice")
                        .HasColumnName("order_uprice")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<string>("TranDate")
                        .HasColumnName("tran_date")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("DataId", "OrderSeqNo", "FeeYm")
                        .HasName("PK_iniDrOrd_1");

                    b.HasIndex("FeeYm", "OrderCode")
                        .HasName("INX_DrOrd");

                    b.ToTable("iniDrOrd");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniOpDtl", b =>
                {
                    b.Property<string>("DataId")
                        .HasColumnName("data_id")
                        .HasColumnType("varchar(28)")
                        .HasMaxLength(28)
                        .IsUnicode(false);

                    b.Property<string>("FeeYm")
                        .HasColumnName("fee_ym")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<decimal?>("AgencyPartAmt")
                        .HasColumnName("agency_part_amt")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<string>("ApplCauseMark")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("appl_cause_mark")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ApplDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("appl_date")
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int?>("ApplDot")
                        .HasColumnName("appl_dot")
                        .HasColumnType("int");

                    b.Property<string>("ApplType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("appl_type")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("AreaService")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("area_service")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("birthday")
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("CaseType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("case_type")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CorrHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("corr_hosp_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("CureDot")
                        .HasColumnName("cure_dot")
                        .HasColumnType("int");

                    b.Property<string>("CureEDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_e_date")
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("CureItem1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_item1")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CureItem2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_item2")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CureItem3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_item3")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CureItem4")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_item4")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("DiagCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("diag_code")
                        .HasColumnType("char(12)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("DiagDot")
                        .HasColumnName("diag_dot")
                        .HasColumnType("int");

                    b.Property<int?>("DrugDays")
                        .HasColumnName("drug_days")
                        .HasColumnType("int");

                    b.Property<int?>("DrugDot")
                        .HasColumnName("drug_dot")
                        .HasColumnType("int");

                    b.Property<string>("DrugPrsnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("drug_prsn_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("DsvcCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dsvc_code")
                        .HasColumnType("char(12)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("DsvcDot")
                        .HasColumnName("dsvc_dot")
                        .HasColumnType("int");

                    b.Property<int?>("ExamTime")
                        .HasColumnType("int");

                    b.Property<string>("ExamYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int?>("ExpDot")
                        .HasColumnName("exp_dot")
                        .HasColumnType("int");

                    b.Property<string>("FirstInstructDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FirstTreatDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FuncDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("func_date")
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("FuncSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("func_seq_no")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FuncType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("func_type")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospDataType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hosp_data_type")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("HospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Icd10cmCode3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd10cm_code3")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd10cmCode4")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd10cm_code4")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd9cmCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd9cm_code")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd9cmCode1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd9cm_code1")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Icd9cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("icd9cm_code2")
                        .HasColumnType("varchar(9)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdSex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Sex")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("InctructSerial")
                        .HasColumnType("int");

                    b.Property<string>("InstructApply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("InstructExamTime")
                        .HasColumnType("int");

                    b.Property<string>("InstructExamYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("MedApply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("MetDot")
                        .HasColumnName("met_dot")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("nchar(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<int?>("PartAmt")
                        .HasColumnName("part_amt")
                        .HasColumnType("int");

                    b.Property<string>("PartCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("part_code")
                        .HasColumnType("char(3)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("PayType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pay_type")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PrsnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prsn_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("RealHospId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("real_hosp_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("RelMode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rel_mode")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ReleaseApply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("SeqNo")
                        .HasColumnName("seq_no")
                        .HasColumnType("int");

                    b.Property<string>("SuppArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("supp_area")
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TraceApply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TranDate")
                        .HasColumnName("tran_date")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int?>("WeekCount")
                        .HasColumnType("int");

                    b.HasKey("DataId", "FeeYm");

                    b.HasIndex("Id", "FeeYm", "HospId", "FuncDate", "Birthday", "MedApply", "WeekCount", "DrugDays", "TranDate")
                        .HasName("INX_OpDtl");

                    b.ToTable("iniOpDtl");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniOpOrd", b =>
                {
                    b.Property<string>("DataId")
                        .HasColumnName("data_id")
                        .HasColumnType("varchar(28)")
                        .HasMaxLength(28)
                        .IsUnicode(false);

                    b.Property<int>("OrderSeqNo")
                        .HasColumnName("order_seq_no")
                        .HasColumnType("int");

                    b.Property<string>("FeeYm")
                        .HasColumnName("fee_ym")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("ChrMark")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chr_mark")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CurePath")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cure_path")
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("DrugFre")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("drug_fre")
                        .HasColumnType("char(18)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(18)
                        .IsUnicode(false);

                    b.Property<string>("DrugNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("drug_num")
                        .HasColumnType("char(6)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("DrugPath")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("drug_path")
                        .HasColumnType("char(15)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ExePrsnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("exe_prsn_id")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("OrderCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_code")
                        .HasColumnType("char(12)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("OrderDot")
                        .HasColumnName("order_dot")
                        .HasColumnType("int");

                    b.Property<int?>("OrderDrugDay")
                        .HasColumnName("order_drug_day")
                        .HasColumnType("int");

                    b.Property<decimal?>("OrderQty")
                        .HasColumnName("order_qty")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<string>("OrderType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_type")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("OrderUprice")
                        .HasColumnName("order_uprice")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<string>("RelMode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rel_mode")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TranDate")
                        .HasColumnName("tran_date")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("DataId", "OrderSeqNo", "FeeYm");

                    b.HasIndex("FeeYm", "OrderCode")
                        .HasName("INX_OpOrd");

                    b.ToTable("iniOpOrd");
                });

            modelBuilder.Entity("SMK.Data.Entity.MhbtAgentPatient", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospAgentCode")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BIRTHDAY")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("BranchCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Branch_Code")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("TxtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TXT_Date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("FuncMark")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Func_Mark")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("InformAddr")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Inform_ADDR")
                        .HasColumnType("nvarchar(120)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(120);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(12)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(12);

                    b.Property<string>("SeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Seq_No")
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Sex")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TelD")
                        .HasColumnName("TEL_D")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("TelDAc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tel_D_AC")
                        .HasColumnType("varchar(4)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TelDEntx")
                        .HasColumnName("TEL_D_ENTX")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TelM")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tel_M")
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("TelN")
                        .HasColumnName("TEL_N")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("TelNAc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tel_N_AC")
                        .HasColumnType("varchar(4)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TelNEntx")
                        .HasColumnName("TEL_N_ENTX")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TownCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Town_Code")
                        .HasColumnType("varchar(4)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TownName")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Town_Name")
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(10);

                    b.HasKey("HospId", "HospAgentCode", "Id", "Birthday", "BranchCode", "TxtDate");

                    b.ToTable("MhbtAgentPatient");
                });

            modelBuilder.Entity("SMK.Data.Entity.MhbtQsCure", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("Hosp_ID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime>("FuncDate")
                        .HasColumnName("Func_Date")
                        .HasColumnType("date");

                    b.Property<string>("CureItem")
                        .HasColumnName("Cure_Item")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .HasColumnName("Hosp_Seq_No")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("AdjustUserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Adjust_User_ID")
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<decimal>("CureNum")
                        .HasColumnName("Cure_Num")
                        .HasColumnType("numeric(5, 1)");

                    b.Property<DateTime>("TxtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Txt_Date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.HasKey("HospId", "Id", "Birthday", "FuncDate", "CureItem", "HospSeqNo");

                    b.ToTable("MhbtQsCure");
                });

            modelBuilder.Entity("SMK.Data.Entity.MhbtQsData", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("Hosp_ID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime>("FuncDate")
                        .HasColumnType("date");

                    b.Property<string>("BranchCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Branch_Code")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("TxtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TXT_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("CureType")
                        .HasColumnName("Cure_Type")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("AdjustUserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ADJUST_USER_ID")
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<decimal?>("BaseWeight")
                        .HasColumnName("Base_Weight")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<string>("CaseKind")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Case_Kind")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CaseSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Case_Source")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("CoCheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CO_CHECK")
                        .HasColumnType("numeric(2, 0)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("CureAgree")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Cure_Agree")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CureStage")
                        .HasColumnName("Cure_Stage")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CureState")
                        .HasColumnName("CURE_STATE")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CureState2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Cure_State2")
                        .HasColumnType("varchar(2)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<decimal?>("CureWeek")
                        .HasColumnName("Cure_Week")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<string>("ExamYear")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("FeeMark")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FEE_MARK")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("PrsnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRSN_ID")
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("SmokeBed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Smoke_Bed")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("SmokeDayNum")
                        .HasColumnName("Smoke_Day_Num")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<string>("SmokeFirst")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Smoke_First")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("SmokeMon")
                        .HasColumnName("Smoke_Mon")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("SmokeMuch")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Smoke_Much")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("SmokeNoGp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Smoke_No_Gp")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("SmokeScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Smoke_Score")
                        .HasColumnType("numeric(2, 0)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("SmokeSick")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Smoke_Sick")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("SmokeStop")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Smoke_Stop")
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("SmokeYear")
                        .HasColumnName("Smoke_Year")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<decimal?>("TraceCoCheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TRACE_CO_CHECK")
                        .HasColumnType("numeric(2, 0)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<decimal?>("TraceCoCheck2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Trace_Co_Check2")
                        .HasColumnType("numeric(2, 0)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<DateTime?>("TraceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TRACE_DATE")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<DateTime?>("TraceDate2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Trace_Date2")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TraceState")
                        .HasColumnName("TRACE_STATE")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("TraceState2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Trace_State2")
                        .HasColumnType("varchar(3)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<decimal?>("WeekTot")
                        .HasColumnName("Week_Tot")
                        .HasColumnType("numeric(2, 0)");

                    b.HasKey("HospId", "Id", "Birthday", "FuncDate", "BranchCode", "TxtDate", "CureType", "HospSeqNo")
                        .HasName("PK_MhbtQsData_1");

                    b.ToTable("MhbtQsData");
                });

            modelBuilder.Entity("SMK.Data.Entity.MhbtQsState", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnName("Hosp_ID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime>("FuncDate")
                        .HasColumnName("Func_Date")
                        .HasColumnType("date");

                    b.Property<string>("CureState")
                        .HasColumnName("Cure_State")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CureType")
                        .HasColumnName("Cure_Type")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .HasColumnName("Hosp_Seq_No")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("AdjustUserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Adjust_User_ID")
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("CureStateOther")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Cure_State_Other")
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)")
                        .HasMaxLength(60);

                    b.Property<DateTime>("TxtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Txt_Date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.HasKey("HospId", "Id", "Birthday", "FuncDate", "CureState", "CureType", "HospSeqNo");

                    b.ToTable("MhbtQsState");
                });

            modelBuilder.Entity("SMK.Data.Entity.Privilege", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkTypeStr")
                        .HasColumnName("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("QueryParams")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Privilege");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnBasic", b =>
                {
                    b.Property<string>("PrsnId")
                        .HasColumnName("PrsnID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("MajorSpecialistNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(5);

                    b.Property<string>("Pemail")
                        .HasColumnName("PEmail")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("PrsnBirthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("PrsnName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<string>("PrsnType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<string>("SubSpecialistNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(5);

                    b.HasKey("PrsnId");

                    b.ToTable("PrsnBasic");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CouldInstruct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1);

                    b.Property<string>("CouldTreat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(1);

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("EndReasonNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(2);

                    b.Property<string>("HospId")
                        .HasColumnName("HospID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HospSeqNo")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("PrsnEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("PrsnId")
                        .HasColumnName("PrsnID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PrsnStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<string>("SmkcontractType")
                        .HasColumnName("SMKContractType")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("HospId", "HospSeqNo", "PrsnId", "SmkcontractType", "PrsnStartDate")
                        .IsUnique()
                        .HasFilter("[HospID] IS NOT NULL AND [HospSeqNo] IS NOT NULL AND [PrsnID] IS NOT NULL AND [SMKContractType] IS NOT NULL AND [PrsnStartDate] IS NOT NULL");

                    b.ToTable("PrsnContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnEmail", b =>
                {
                    b.Property<string>("PrsnId")
                        .HasColumnName("PrsnID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Pemail")
                        .HasColumnName("PEmail")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.HasKey("PrsnId", "Pemail");

                    b.ToTable("PrsnEmail");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnLicence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("CertPublicDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<string>("CertStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(8);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenceNo")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LicenceType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("PrsnId")
                        .HasColumnName("PrsnID")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("PrsnId", "LicenceType", "LicenceNo")
                        .IsUnique()
                        .HasFilter("[PrsnID] IS NOT NULL AND [LicenceType] IS NOT NULL AND [LicenceNo] IS NOT NULL");

                    b.ToTable("PrsnLicence");
                });

            modelBuilder.Entity("SMK.Data.Entity.QsLicenceMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CTypeName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CTypeSNO")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.Property<string>("LicenceType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("LicenceType", "CTypeSNO")
                        .IsUnique()
                        .HasFilter("[LicenceType] IS NOT NULL");

                    b.ToTable("QsLicenceMap");
                });

            modelBuilder.Entity("SMK.Data.Entity.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            CreatedAt = new DateTime(2020, 10, 23, 2, 24, 17, 297, DateTimeKind.Local).AddTicks(235),
                            Name = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.RoleEmpMapping", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("EmpId", "RoleId")
                        .IsUnique()
                        .HasFilter("[EmpId] IS NOT NULL AND [RoleId] IS NOT NULL");

                    b.ToTable("RoleEmpMapping");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            CreatedAt = new DateTime(2020, 10, 23, 2, 24, 17, 297, DateTimeKind.Local).AddTicks(2767),
                            EmpId = "00000000-0000-0000-0000-000000000000",
                            RoleId = "00000000-0000-0000-0000-000000000000"
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.RolePrivilegeMapping", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EnableEntry")
                        .HasColumnType("bit");

                    b.Property<string>("PrivilegeId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(127)")
                        .HasMaxLength(127);

                    b.HasKey("Id");

                    b.HasIndex("PrivilegeId", "RoleId")
                        .IsUnique()
                        .HasFilter("[PrivilegeId] IS NOT NULL AND [RoleId] IS NOT NULL");

                    b.ToTable("RolePrivilegeMapping");
                });

            modelBuilder.Entity("SMK.Data.Entity.SamplingData", b =>
                {
                    b.Property<string>("FeeYm")
                        .HasColumnName("fee_ym")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("DataId")
                        .HasColumnName("data_id")
                        .HasColumnType("varchar(28)")
                        .HasMaxLength(28)
                        .IsUnicode(false);

                    b.Property<int>("OrderSeqNo")
                        .HasColumnName("order_seq_no")
                        .HasColumnType("int");

                    b.Property<string>("Appeals")
                        .HasColumnName("appeals")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Appealsamt")
                        .HasColumnName("appealsamt")
                        .HasColumnType("int");

                    b.Property<string>("Appealsdate")
                        .HasColumnName("appealsdate")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Appealsremark")
                        .HasColumnName("appealsremark")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Review")
                        .HasColumnName("review")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Reviewamt")
                        .HasColumnName("reviewamt")
                        .HasColumnType("int");

                    b.Property<string>("Reviewdate")
                        .HasColumnName("reviewdate")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Reviewremark")
                        .HasColumnName("reviewremark")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("FeeYm", "DataId", "OrderSeqNo")
                        .HasName("PK_SamplingData");

                    b.ToTable("SamplingData");
                });

            modelBuilder.Entity("SMK.Data.Entity.SamplingList", b =>
                {
                    b.Property<string>("FeeYm")
                        .HasColumnName("fee_ym")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("DataId")
                        .HasColumnName("data_id")
                        .HasColumnType("varchar(28)")
                        .HasMaxLength(28)
                        .IsUnicode(false);

                    b.Property<string>("Accessdate")
                        .HasColumnName("accessdate")
                        .HasColumnType("varchar(7)")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<string>("Accessno")
                        .HasColumnName("accessno")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("ChkFlg")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Replydate")
                        .HasColumnName("replydate")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Replyno")
                        .HasColumnName("replyno")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("SamplingNo")
                        .HasColumnType("char(7)")
                        .IsFixedLength(true)
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.HasKey("FeeYm", "DataId")
                        .HasName("PK_SamplingList");

                    b.ToTable("SamplingList");
                });
#pragma warning restore 612, 618
        }
    }
}
