// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMK.Data;

namespace SMK.Data.Migrations
{
    [DbContext(typeof(SMKWEBContext))]
    [Migration("20221102145852_AlterCorrectionSlipCompositeKey")]
    partial class AlterCorrectionSlipCompositeKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SMK.Data.Entity.AuditLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Account")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ActionRemark")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("ActionRemark");

                    b.Property<string>("ActionTypeStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ActionType");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CurrentRecord")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)")
                        .HasColumnName("Description");

                    b.Property<string>("InvolvedColumns")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("OriginalRecord")
                        .HasColumnType("text");

                    b.Property<string>("RecordId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SourceTable")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Account");

                    b.HasIndex("RecordId");

                    b.HasIndex("SourceTable");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("SMK.Data.Entity.CorrectionSlip", b =>
                {
                    b.Property<string>("CaseNo")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CorrectBasic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectHealth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectHosp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectItems2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectionReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HospId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonStatement")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CaseNo", "ReceiveDate");

                    b.HasIndex("CaseNo");

                    b.ToTable("CorrectionSlip");
                });

            modelBuilder.Entity("SMK.Data.Entity.DataInsertLog", b =>
                {
                    b.Property<int>("ISNO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RecordCount")
                        .HasColumnType("int");

                    b.HasKey("ISNO")
                        .HasName("PK_ISNO_1");

                    b.ToTable("DataInsertLog");
                });

            modelBuilder.Entity("SMK.Data.Entity.DtlWithSet", b =>
                {
                    b.Property<int?>("ApplDot")
                        .HasColumnType("int")
                        .HasColumnName("Appl_Dot");

                    b.Property<string>("Birthday")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength(true);

                    b.Property<string>("Bupropion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Correction")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("DataId")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("char(28)")
                        .HasColumnName("Data_ID")
                        .IsFixedLength(true);

                    b.Property<string>("DentistTreat")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("DispensingFee")
                        .HasColumnType("int");

                    b.Property<string>("DrTreat")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Drug")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("DrugDays")
                        .HasColumnType("int")
                        .HasColumnName("Drug_Days");

                    b.Property<int?>("DrugFee")
                        .HasColumnType("int");

                    b.Property<string>("EduTreat")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("ExamTime")
                        .HasColumnType("int");

                    b.Property<string>("ExamYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<string>("ExePrsnId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("ExePrsnID")
                        .IsFixedLength(true);

                    b.Property<int?>("ExpDot")
                        .HasColumnType("int")
                        .HasColumnName("Exp_Dot");

                    b.Property<string>("FeeYm")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("Fee_YM")
                        .IsFixedLength(true);

                    b.Property<string>("FirstInstructDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength(true);

                    b.Property<string>("FirstTreatDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength(true);

                    b.Property<string>("FuncDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("Func_Date")
                        .IsFixedLength(true);

                    b.Property<string>("FuncMonth")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("Func_Month")
                        .IsFixedLength(true);

                    b.Property<string>("FuncType")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("Func_Type")
                        .IsFixedLength(true);

                    b.Property<string>("GumLozenge")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Gum_Lozenge")
                        .IsFixedLength(true);

                    b.Property<string>("HospContType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("HospId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .IsFixedLength(true);

                    b.Property<string>("HospSeqNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("ID")
                        .IsFixedLength(true);

                    b.Property<string>("IdSex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("ID_Sex")
                        .IsFixedLength(true);

                    b.Property<int?>("InctructSerial")
                        .HasColumnType("int");

                    b.Property<string>("Inhaler")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("InsQlty")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("InstructApply")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("InstructExamTime")
                        .HasColumnType("int");

                    b.Property<string>("InstructExamYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength(true);

                    b.Property<int?>("InstructionFee")
                        .HasColumnType("int");

                    b.Property<string>("LastHospId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("LastHospID")
                        .IsFixedLength(true);

                    b.Property<string>("LastHospSeqNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("LowIncome")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("MedApply")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("MedQlty")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("OrigHospId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Orig_Hosp_ID")
                        .IsFixedLength(true);

                    b.Property<int?>("PartAmt")
                        .HasColumnType("int")
                        .HasColumnName("Part_Amt");

                    b.Property<string>("PartCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("Part_Code")
                        .IsFixedLength(true);

                    b.Property<string>("PatchN")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Patch_N")
                        .IsFixedLength(true);

                    b.Property<string>("PatchS")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Patch_S")
                        .IsFixedLength(true);

                    b.Property<string>("PharTreat")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("PrsnId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Prsn_ID")
                        .IsFixedLength(true);

                    b.Property<string>("PrsnType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Referral")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("ReferralFee")
                        .HasColumnType("int");

                    b.Property<string>("RelMode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Rel_Mode")
                        .IsFixedLength(true);

                    b.Property<string>("ReleaseApply")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ServiceFee")
                        .HasColumnType("int");

                    b.Property<string>("TraceApply")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("TracingFee")
                        .HasColumnType("int");

                    b.Property<string>("UnCount")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Varenicline")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("Visits")
                        .HasColumnType("int");

                    b.Property<int?>("WeekCount")
                        .HasColumnType("int");

                    b.ToTable("DtlWithSet");
                });

            modelBuilder.Entity("SMK.Data.Entity.ExceptionLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Category")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("ExtraData")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("SourceServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("CreatedAt");

                    b.ToTable("ExceptionLog");
                });

            modelBuilder.Entity("SMK.Data.Entity.FileUploadLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("FileName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileStatusStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileStatus");

                    b.Property<string>("FileTypeStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileType");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("FileUploadLog");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenBranch", b =>
                {
                    b.Property<string>("BranchNo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("BranchName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("BranchNo")
                        .HasName("PK_GenBranch_1");

                    b.ToTable("GenBranch");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenDrugBasic", b =>
                {
                    b.Property<string>("DrugNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DrugCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DrugContent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DrugIngredient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrugType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HealthCarePrice")
                        .HasColumnType("bit");

                    b.Property<string>("OrderChiName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderEngName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("prescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrugNo");

                    b.HasIndex("DrugNo");

                    b.ToTable("GenDrugBasic");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenEmpData", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Account")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginError")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoginErrorAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("LoginErrorAt");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("PasswordModifyAt");

                    b.Property<string>("Pwd")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique()
                        .HasFilter("[Account] IS NOT NULL");

                    b.ToTable("GenEmpData");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            Account = "Admin",
                            CreatedAt = new DateTime(2021, 7, 6, 13, 39, 5, 627, DateTimeKind.Local).AddTicks(8438),
                            Enable = true,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginError = 0,
                            Name = "系統管理員",
                            Pwd = "ZHACEBb7ESmBmYj7XqLotw=="
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.GenEndReason", b =>
                {
                    b.Property<string>("EndReasonNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("EndReasonName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("EndReasonNo")
                        .HasName("PK_GenEndReason_1");

                    b.ToTable("GenEndReason");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenHospCont", b =>
                {
                    b.Property<string>("HospContType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("HospContName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("QualityDefaultCount")
                        .HasColumnType("int")
                        .HasColumnName("QualityDefaultCount");

                    b.Property<int>("QualityImproveCount")
                        .HasColumnType("int")
                        .HasColumnName("QualityImproveCount");

                    b.HasKey("HospContType")
                        .HasName("PK_GenHospCont_1");

                    b.ToTable("GenHospCont");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenLicenceType", b =>
                {
                    b.Property<string>("LicenceType")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("LicenceName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("LicenceType")
                        .HasName("PK_GenLicenceType_1");

                    b.ToTable("GenLicenceType");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenOrderCode", b =>
                {
                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderCate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderChiName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderEngName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderCode");

                    b.ToTable("GenOrderCode");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenPrsnEndReason", b =>
                {
                    b.Property<string>("EndReasonNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("EndReasonName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("EndReasonNo")
                        .HasName("PK_GenPrsnEndReason_1");

                    b.ToTable("GenPrsnEndReason");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenPrsnType", b =>
                {
                    b.Property<string>("PrsnType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("PrsnTypeName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("PrsnType")
                        .HasName("PK_GenPrsnType_1");

                    b.ToTable("GenPrsnType");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenSmkcontract", b =>
                {
                    b.Property<string>("SmkcontractType")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("SMKContractType")
                        .IsFixedLength(true);

                    b.Property<string>("SmkcontractName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SMKContractName")
                        .HasDefaultValueSql("('')");

                    b.HasKey("SmkcontractType")
                        .HasName("PK_GenSMKContract_1");

                    b.ToTable("GenSMKContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.GenSpecial", b =>
                {
                    b.Property<string>("SpecialistNo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("SpecialistName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("SpecialistNo")
                        .HasName("PK_GenSpecial_2");

                    b.ToTable("GenSpecial");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospBasic", b =>
                {
                    b.Property<string>("HospId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .IsFixedLength(true);

                    b.Property<string>("HospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("BranchNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ChFlg1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("chFlg1")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ChFlg2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("chFlg2")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ChFlg3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("chFlg3")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Contact1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Contact2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactEmail1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactEmail2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactFax1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactFax2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactTel1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactTel2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("FirstHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("FirstHospID")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("FirstHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospAbbr")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospAddress")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospEmail")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospFax")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospOwnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("HospOwnID")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospOwnName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospTel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("LastContType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("LastHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LastHospID")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("LastHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("PrevHospID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PrevHospID")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("PrevHospSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("SubDivisionNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Zip")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("ZIP")
                        .HasDefaultValueSql("('')");

                    b.HasKey("HospId", "HospSeqNo")
                        .HasName("PK_SMKHospBasic");

                    b.ToTable("HospBasic");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospBscAll", b =>
                {
                    b.Property<string>("HospId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .IsFixedLength(true);

                    b.Property<string>("BranchNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospAddress")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospEndDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospKind")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospTel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospTelArea")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("HospId");

                    b.ToTable("HospBscAll");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("EndReasonNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospEndDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .IsFixedLength(true);

                    b.Property<string>("HospSeqNo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("HospStartDate")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("SmkcontractType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("SMKContractType");

                    b.HasKey("Id");

                    b.HasIndex("HospId", "HospSeqNo", "SmkcontractType", "HospStartDate")
                        .IsUnique()
                        .HasFilter("[SMKContractType] IS NOT NULL AND [HospStartDate] IS NOT NULL");

                    b.ToTable("HospContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.HospContractType", b =>
                {
                    b.Property<string>("HospId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HospSeqNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HospContType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CntSDate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CntEDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HospId", "HospSeqNo", "HospContType", "CntSDate");

                    b.ToTable("HospContractType");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniDrDtl", b =>
                {
                    b.Property<string>("DataId")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<string>("FeeYm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<string>("ApplCauseMark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_cause_mark")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ApplDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("appl_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ApplDot")
                        .HasColumnType("int")
                        .HasColumnName("appl_dot");

                    b.Property<string>("ApplType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("AreaService")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("area_service")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("birthday")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CaseType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("case_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CorrHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("corr_hosp_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("CureDot")
                        .HasColumnType("int")
                        .HasColumnName("cure_dot");

                    b.Property<string>("CureItem1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item1")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item2")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item3")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item4")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("DrugDays")
                        .HasColumnType("int")
                        .HasColumnName("drug_days");

                    b.Property<int?>("DrugDot")
                        .HasColumnType("int")
                        .HasColumnName("drug_dot");

                    b.Property<string>("DrugPrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("drug_prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DsvcCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("dsvc_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("DsvcDot")
                        .HasColumnType("int")
                        .HasColumnName("dsvc_dot");

                    b.Property<int?>("ExamTime")
                        .HasColumnType("int");

                    b.Property<string>("ExamYear")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ExpDot")
                        .HasColumnType("int")
                        .HasColumnName("exp_dot");

                    b.Property<string>("FirstInstructDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FirstTreatDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("func_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("func_seq_no")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("func_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("HospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("HospSeqNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("HospSeqNo")
                        .IsFixedLength(true);

                    b.Property<string>("Icd10cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code2")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd10cmCode3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code3")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd10cmCode4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code4")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code1")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code2")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("IdSex")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Id_Sex")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("InctructSerial")
                        .HasColumnType("int");

                    b.Property<string>("InstructApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("InstructExamTime")
                        .HasColumnType("int");

                    b.Property<string>("InstructExamYear")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("MedApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("name")
                        .IsFixedLength(true);

                    b.Property<string>("OrigCaseType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("orig_case_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("OrigHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("orig_hosp_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("OtherPartAmt")
                        .HasColumnType("int")
                        .HasColumnName("other_part_amt");

                    b.Property<int?>("PartAmt")
                        .HasColumnType("int")
                        .HasColumnName("part_amt");

                    b.Property<string>("PartCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("part_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("PayType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pay_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("PrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("RelDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("rel_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ReleaseApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("SeqNo")
                        .HasColumnType("int")
                        .HasColumnName("seq_no");

                    b.Property<string>("TraceApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("TranDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("tran_date")
                        .IsFixedLength(true);

                    b.Property<int?>("WeekCount")
                        .HasColumnType("int");

                    b.HasKey("DataId", "FeeYm");

                    b.HasIndex("TranDate");

                    b.HasIndex("Id", "FeeYm", "HospId", "FuncDate", "Birthday", "MedApply", "WeekCount", "DrugDays", "OrigHospId", "TranDate")
                        .HasDatabaseName("INX_DrDtl");

                    b.ToTable("iniDrDtl");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniDrOrd", b =>
                {
                    b.Property<string>("DataId")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<int>("OrderSeqNo")
                        .HasColumnType("int")
                        .HasColumnName("order_seq_no");

                    b.Property<string>("FeeYm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<string>("DrugFre")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("char(18)")
                        .HasColumnName("drug_fre")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DrugNum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("drug_num")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DrugPath")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("drug_path")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ExePrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("exe_prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("OrderCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("order_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("OrderDot")
                        .HasColumnType("int")
                        .HasColumnName("order_dot");

                    b.Property<int?>("OrderDrugDay")
                        .HasColumnType("int")
                        .HasColumnName("order_drug_day");

                    b.Property<decimal?>("OrderQty")
                        .HasColumnType("decimal(7,2)")
                        .HasColumnName("order_qty");

                    b.Property<string>("OrderType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("order_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<decimal?>("OrderUprice")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("order_uprice");

                    b.Property<string>("TranDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("tran_date");

                    b.HasKey("DataId", "OrderSeqNo", "FeeYm")
                        .HasName("PK_iniDrOrd_1");

                    b.HasIndex("FeeYm", "OrderCode")
                        .HasDatabaseName("INX_DrOrd");

                    b.ToTable("iniDrOrd");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniExportInCtrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("StatusUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("fee_ym")
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id")
                        .HasName("PK_IniExportInCtrl");

                    b.ToTable("IniExportInCtrl");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniFileInCtrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("StatusUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_IniFileInCtrl");

                    b.ToTable("IniFileInCtrl");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniMonthDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractAllTotal")
                        .HasColumnType("int");

                    b.Property<int>("ContractPersonAllTotal")
                        .HasColumnType("int");

                    b.Property<int>("ContractPersonTotal")
                        .HasColumnType("int");

                    b.Property<int>("ContractTotal")
                        .HasColumnType("int");

                    b.Property<string>("ContractYM")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("InstructCnt")
                        .HasColumnType("int");

                    b.Property<int>("InstructSum")
                        .HasColumnType("int");

                    b.Property<string>("NhiYM")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("RunTimeContractAllTotal")
                        .HasColumnType("int");

                    b.Property<int>("RunTimeContractPersonAllTotal")
                        .HasColumnType("int");

                    b.Property<int>("TreatAddInstruct")
                        .HasColumnType("int");

                    b.Property<int>("TreatCnt")
                        .HasColumnType("int");

                    b.Property<int>("TreatInstructCnt")
                        .HasColumnType("int");

                    b.Property<int>("TreatInstructSum")
                        .HasColumnType("int");

                    b.Property<int>("TreatSum")
                        .HasColumnType("int");

                    b.Property<int>("TreatWeek")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractYM")
                        .IsUnique()
                        .HasFilter("[ContractYM] IS NOT NULL");

                    b.ToTable("IniMonthDetail");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniOpDtl", b =>
                {
                    b.Property<string>("DataId")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<string>("FeeYm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<decimal?>("AgencyPartAmt")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("agency_part_amt");

                    b.Property<string>("ApplCauseMark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_cause_mark")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ApplDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("appl_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ApplDot")
                        .HasColumnType("int")
                        .HasColumnName("appl_dot");

                    b.Property<string>("ApplType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("AreaService")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("area_service")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("birthday")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CaseType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("case_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CorrHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("corr_hosp_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("CureDot")
                        .HasColumnType("int")
                        .HasColumnName("cure_dot");

                    b.Property<string>("CureEDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("cure_e_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item1")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item2")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item3")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item4")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DiagCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("diag_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("DiagDot")
                        .HasColumnType("int")
                        .HasColumnName("diag_dot");

                    b.Property<int?>("DrugDays")
                        .HasColumnType("int")
                        .HasColumnName("drug_days");

                    b.Property<int?>("DrugDot")
                        .HasColumnType("int")
                        .HasColumnName("drug_dot");

                    b.Property<string>("DrugPrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("drug_prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DsvcCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("dsvc_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("DsvcDot")
                        .HasColumnType("int")
                        .HasColumnName("dsvc_dot");

                    b.Property<int?>("ExamTime")
                        .HasColumnType("int");

                    b.Property<string>("ExamYear")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ExpDot")
                        .HasColumnType("int")
                        .HasColumnName("exp_dot");

                    b.Property<string>("FirstInstructDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FirstTreatDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("func_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("func_seq_no")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("func_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("HospDataType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("hosp_data_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("HospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("HospSeqNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("HospSeqNo")
                        .IsFixedLength(true);

                    b.Property<string>("Icd10cmCode3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code3")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd10cmCode4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code4")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code1")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code2")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("IdSex")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Id_Sex")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("InctructSerial")
                        .HasColumnType("int");

                    b.Property<string>("InstructApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("InstructExamTime")
                        .HasColumnType("int");

                    b.Property<string>("InstructExamYear")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("MedApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("MetDot")
                        .HasColumnType("int")
                        .HasColumnName("met_dot");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("PartAmt")
                        .HasColumnType("int")
                        .HasColumnName("part_amt");

                    b.Property<string>("PartCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("part_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("PayType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pay_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("PrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("RealHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("real_hosp_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("RelMode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("rel_mode")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ReleaseApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("SeqNo")
                        .HasColumnType("int")
                        .HasColumnName("seq_no");

                    b.Property<string>("SuppArea")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("supp_area")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("TraceApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("TranDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("tran_date")
                        .IsFixedLength(true);

                    b.Property<int?>("WeekCount")
                        .HasColumnType("int");

                    b.HasKey("DataId", "FeeYm");

                    b.HasIndex("Id", "FeeYm", "HospId", "FuncDate", "Birthday", "MedApply", "WeekCount", "DrugDays", "TranDate")
                        .HasDatabaseName("INX_OpDtl");

                    b.ToTable("iniOpDtl");
                });

            modelBuilder.Entity("SMK.Data.Entity.IniOpOrd", b =>
                {
                    b.Property<string>("DataId")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<int>("OrderSeqNo")
                        .HasColumnType("int")
                        .HasColumnName("order_seq_no");

                    b.Property<string>("FeeYm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<string>("ChrMark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("chr_mark")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CurePath")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("cure_path")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DrugFre")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("char(18)")
                        .HasColumnName("drug_fre")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DrugNum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("drug_num")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DrugPath")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("drug_path")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ExePrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("exe_prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("OrderCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("order_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("OrderDot")
                        .HasColumnType("int")
                        .HasColumnName("order_dot");

                    b.Property<int?>("OrderDrugDay")
                        .HasColumnType("int")
                        .HasColumnName("order_drug_day");

                    b.Property<decimal?>("OrderQty")
                        .HasColumnType("decimal(7,2)")
                        .HasColumnName("order_qty");

                    b.Property<string>("OrderType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("order_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<decimal?>("OrderUprice")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("order_uprice");

                    b.Property<string>("RelMode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("rel_mode")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("TranDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("tran_date");

                    b.HasKey("DataId", "OrderSeqNo", "FeeYm");

                    b.HasIndex("FeeYm", "OrderCode")
                        .HasDatabaseName("INX_OpOrd");

                    b.ToTable("iniOpOrd");
                });

            modelBuilder.Entity("SMK.Data.Entity.MhbtAgentPatient", b =>
                {
                    b.Property<string>("HospID")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HospAgentCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("ID")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("BranchCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TxtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("FuncMark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("InformADDR")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("SeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TelD")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TelM")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TelN")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TownCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TownName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.HasKey("HospID", "HospAgentCode", "ID", "Birthday", "BranchCode", "TxtDate");

                    b.ToTable("MhbtAgentPatient");
                });

            modelBuilder.Entity("SMK.Data.Entity.MhbtQsCure", b =>
                {
                    b.Property<string>("HospID")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ID")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FuncDate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CureItem")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HospSeqNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("AdjustUserID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<decimal>("CureNum")
                        .HasColumnType("numeric(5,1)");

                    b.Property<string>("TxtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.HasKey("HospID", "ID", "Birthday", "FuncDate", "CureItem", "HospSeqNo");

                    b.ToTable("MhbtQsCure");
                });

            modelBuilder.Entity("SMK.Data.Entity.MhbtQsData", b =>
                {
                    b.Property<string>("HospId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ID")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ID");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FuncDate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CureStage")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("ExamYear")
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("CurtState")
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("CureType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Cure_Type");

                    b.Property<string>("HospSeqNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("AdjustUserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("AdjustUserID")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<decimal>("BaseWeight")
                        .HasColumnType("numeric(18,1)");

                    b.Property<string>("BranchCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("CaseKind")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Case_Kind")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("CaseSource")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Case_Source")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("ChType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CoCheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,0)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("CureAgree")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("CureState2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Cure_State2")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("CureStateOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CureWeek")
                        .HasColumnType("numeric(1,0)");

                    b.Property<string>("FeeMark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("FirstTreatDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrsnID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("PrsnID")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("SideEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmokeBed")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<decimal>("SmokeDayNum")
                        .HasColumnType("numeric(4,0)");

                    b.Property<string>("SmokeFirst")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("SmokeLung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SmokeMon")
                        .HasColumnType("numeric(2,0)");

                    b.Property<string>("SmokeMuch")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("SmokeNico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmokeNoGp")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<decimal>("SmokeScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(2,0)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("SmokeSick")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("SmokeStop")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<decimal>("SmokeYear")
                        .HasColumnType("numeric(3,0)");

                    b.Property<decimal>("TraceCoCheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(2,0)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<decimal>("TraceCoCheck2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("Trace_Co_Check2")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TraceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TraceDate2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Trace_Date2")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TraceState")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TraceState2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Trace_State2")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("TxtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<decimal>("WeekTot")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("WeekTot");

                    b.HasKey("HospId", "ID", "Birthday", "FuncDate", "CureStage", "ExamYear", "CurtState", "CureType", "HospSeqNo")
                        .HasName("PK_MhbtQsData_1");

                    b.ToTable("MhbtQsData");
                });

            modelBuilder.Entity("SMK.Data.Entity.MhbtQsState", b =>
                {
                    b.Property<string>("HospID")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ID")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FuncDate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CureState")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CureType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Cure_Type");

                    b.Property<string>("HospSeqNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("AdjustUserID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<string>("CureStateOther")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.Property<int>("Seqno")
                        .HasColumnType("int");

                    b.Property<string>("TxtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(('') collate Chinese_Taiwan_Stroke_CI_AS)");

                    b.HasKey("HospID", "ID", "Birthday", "FuncDate", "CureState", "CureType", "HospSeqNo");

                    b.ToTable("MhbtQsState");
                });

            modelBuilder.Entity("SMK.Data.Entity.OrdOfB7", b =>
                {
                    b.Property<string>("Data_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Drug_Fre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drug_Num")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drug_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exe_Prsn_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fee_YM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order_Dot")
                        .HasColumnType("int");

                    b.Property<decimal?>("Order_Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Order_Seq_No")
                        .HasColumnType("int");

                    b.Property<string>("Order_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Order_Uprice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rel_Mode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Data_ID");

                    b.ToTable("OrdOfB7");
                });

            modelBuilder.Entity("SMK.Data.Entity.Privilege", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("LinkTypeStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("QueryParams")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Remark")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Privilege");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnBasic", b =>
                {
                    b.Property<string>("PrsnId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("PrsnID")
                        .IsFixedLength(true);

                    b.Property<string>("MajorSpecialistNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Pemail")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("PEmail");

                    b.Property<string>("PrsnBirthday")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("PrsnName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("PrsnType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("SubSpecialistNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("PrsnId");

                    b.ToTable("PrsnBasic");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnContactReport", b =>
                {
                    b.Property<string>("身分證號")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("人員合約起日")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("人員合約迄日")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("人員類別")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("出生日期")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("姓名")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("服務類型")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機構名稱")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("機構狀態")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("醫事機構代碼")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("院區別")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("身分證號");

                    b.ToView("PrsnContactReport");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CouldInstruct")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CouldTreat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("EndReasonNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("HospId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .IsFixedLength(true);

                    b.Property<string>("HospSeqNo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true);

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("PrsnEndDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("PrsnId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("PrsnID")
                        .IsFixedLength(true);

                    b.Property<string>("PrsnStartDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("SmkcontractType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SMKContractType");

                    b.HasKey("Id");

                    b.HasIndex("HospId", "HospSeqNo", "PrsnId", "SmkcontractType", "PrsnStartDate")
                        .IsUnique()
                        .HasFilter("[HospID] IS NOT NULL AND [HospSeqNo] IS NOT NULL AND [PrsnID] IS NOT NULL AND [SMKContractType] IS NOT NULL AND [PrsnStartDate] IS NOT NULL");

                    b.ToTable("PrsnContract");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnEmail", b =>
                {
                    b.Property<string>("PrsnId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("PrsnID")
                        .IsFixedLength(true);

                    b.Property<string>("Pemail")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("PEmail");

                    b.HasKey("PrsnId", "Pemail");

                    b.ToTable("PrsnEmail");
                });

            modelBuilder.Entity("SMK.Data.Entity.PrsnLicence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertEndDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CertPublicDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CertStartDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("LicenceNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LicenceType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PrsnId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PrsnID");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("PrsnId", "LicenceType", "LicenceNo")
                        .IsUnique()
                        .HasFilter("[PrsnID] IS NOT NULL AND [LicenceType] IS NOT NULL AND [LicenceNo] IS NOT NULL");

                    b.ToTable("PrsnLicence");
                });

            modelBuilder.Entity("SMK.Data.Entity.QsLicenceMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CTypeSNO")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("LicenceType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("LicenceType", "CTypeSNO")
                        .IsUnique()
                        .HasFilter("[LicenceType] IS NOT NULL");

                    b.ToTable("QsLicenceMap");
                });

            modelBuilder.Entity("SMK.Data.Entity.QsQuota", b =>
                {
                    b.Property<string>("YEARS")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HOSP_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HOSP_SEQ_NO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CURE_TYPE")
                        .HasColumnType("int");

                    b.Property<DateTime>("VALID_S_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VALID_E_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("ADJUST_USER_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREAT_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CREAT_USER_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QUOTA")
                        .HasColumnType("int");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TXT_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("YEARS", "HOSP_ID", "HOSP_SEQ_NO", "CURE_TYPE", "VALID_S_DATE", "VALID_E_DATE");

                    b.ToTable("CST_QS_QUOTA");
                });

            modelBuilder.Entity("SMK.Data.Entity.QuitDataAll", b =>
                {
                    b.Property<string>("CaseNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstMonth")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimeSpan")
                        .HasColumnType("int");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospSeqNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuitCtn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuitPnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CaseNo", "FirstMonth", "TimeSpan");

                    b.ToTable("QuitDataAll");
                });

            modelBuilder.Entity("SMK.Data.Entity.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            CreatedAt = new DateTime(2021, 7, 6, 13, 39, 5, 632, DateTimeKind.Local).AddTicks(1710),
                            Name = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.RoleEmpMapping", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("EmpId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("EmpId", "RoleId")
                        .IsUnique()
                        .HasFilter("[EmpId] IS NOT NULL AND [RoleId] IS NOT NULL");

                    b.ToTable("RoleEmpMapping");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            CreatedAt = new DateTime(2021, 7, 6, 13, 39, 5, 632, DateTimeKind.Local).AddTicks(3958),
                            EmpId = "00000000-0000-0000-0000-000000000000",
                            RoleId = "00000000-0000-0000-0000-000000000000"
                        });
                });

            modelBuilder.Entity("SMK.Data.Entity.RolePrivilegeMapping", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<bool>("EnableEntry")
                        .HasColumnType("bit");

                    b.Property<string>("PrivilegeId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("PrivilegeId", "RoleId")
                        .IsUnique()
                        .HasFilter("[PrivilegeId] IS NOT NULL AND [RoleId] IS NOT NULL");

                    b.ToTable("RolePrivilegeMapping");
                });

            modelBuilder.Entity("SMK.Data.Entity.SamplingData", b =>
                {
                    b.Property<string>("FeeYm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<string>("DataId")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<int>("OrderSeqNo")
                        .HasColumnType("int")
                        .HasColumnName("order_seq_no");

                    b.Property<string>("Appeals")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("appeals");

                    b.Property<int?>("Appealsamt")
                        .HasColumnType("int")
                        .HasColumnName("appealsamt");

                    b.Property<string>("Appealsdate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("appealsdate");

                    b.Property<string>("Appealsremark")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("appealsremark");

                    b.Property<string>("Review")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("review");

                    b.Property<int?>("Reviewamt")
                        .HasColumnType("int")
                        .HasColumnName("reviewamt");

                    b.Property<string>("Reviewdate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("reviewdate");

                    b.Property<string>("Reviewremark")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviewremark");

                    b.HasKey("FeeYm", "DataId", "OrderSeqNo")
                        .HasName("PK_SamplingData");

                    b.ToTable("SamplingData");
                });

            modelBuilder.Entity("SMK.Data.Entity.SamplingList", b =>
                {
                    b.Property<string>("FeeYm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<string>("DataId")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<string>("Accessdate")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("accessdate");

                    b.Property<string>("Accessno")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("accessno");

                    b.Property<string>("ChkFlg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Replydate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("replydate");

                    b.Property<string>("Replyno")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("replyno");

                    b.Property<string>("SamplingNo")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .IsFixedLength(true);

                    b.HasKey("FeeYm", "DataId")
                        .HasName("PK_SamplingList");

                    b.ToTable("SamplingList");
                });

            modelBuilder.Entity("SMK.Data.Entity.UpdDrDtl", b =>
                {
                    b.Property<string>("DataId")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<string>("FeeYm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<string>("ApplCauseMark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_cause_mark")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ApplDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("appl_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ApplDot")
                        .HasColumnType("int")
                        .HasColumnName("appl_dot");

                    b.Property<string>("ApplType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("AreaService")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("area_service")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("birthday")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CaseType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("case_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CorrHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("corr_hosp_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("CureDot")
                        .HasColumnType("int")
                        .HasColumnName("cure_dot");

                    b.Property<string>("CureItem1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item1")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item2")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item3")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item4")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("DrugDays")
                        .HasColumnType("int")
                        .HasColumnName("drug_days");

                    b.Property<int?>("DrugDot")
                        .HasColumnType("int")
                        .HasColumnName("drug_dot");

                    b.Property<string>("DrugPrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("drug_prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DsvcCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("dsvc_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("DsvcDot")
                        .HasColumnType("int")
                        .HasColumnName("dsvc_dot");

                    b.Property<int?>("ExamTime")
                        .HasColumnType("int");

                    b.Property<string>("ExamYear")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ExpDot")
                        .HasColumnType("int")
                        .HasColumnName("exp_dot");

                    b.Property<string>("FirstInstructDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FirstTreatDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("func_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("func_seq_no")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("func_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("HospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Icd10cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code2")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd10cmCode3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code3")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd10cmCode4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code4")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code1")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code2")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("IdSex")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Id_Sex")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("InctructSerial")
                        .HasColumnType("int");

                    b.Property<string>("InstructApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("InstructExamTime")
                        .HasColumnType("int");

                    b.Property<string>("InstructExamYear")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("MedApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("name")
                        .IsFixedLength(true);

                    b.Property<string>("OrigCaseType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("orig_case_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("OrigHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("orig_hosp_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("OtherPartAmt")
                        .HasColumnType("int")
                        .HasColumnName("other_part_amt");

                    b.Property<int?>("PartAmt")
                        .HasColumnType("int")
                        .HasColumnName("part_amt");

                    b.Property<string>("PartCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("part_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("PayType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pay_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("PrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("RelDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("rel_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ReleaseApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("SeqNo")
                        .HasColumnType("int")
                        .HasColumnName("seq_no");

                    b.Property<string>("TraceApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("TranDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("tran_date")
                        .IsFixedLength(true);

                    b.Property<int?>("WeekCount")
                        .HasColumnType("int");

                    b.HasKey("DataId", "FeeYm");

                    b.HasIndex("Id", "FeeYm", "HospId", "FuncDate", "Birthday", "MedApply", "WeekCount", "DrugDays", "OrigHospId")
                        .HasDatabaseName("INX_UDrDtl");

                    b.ToTable("updDrDtl");
                });

            modelBuilder.Entity("SMK.Data.Entity.UpdOpDtl", b =>
                {
                    b.Property<string>("DataId")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<string>("FeeYm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<decimal?>("AgencyPartAmt")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("agency_part_amt");

                    b.Property<string>("ApplCauseMark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_cause_mark")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ApplDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("appl_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ApplDot")
                        .HasColumnType("int")
                        .HasColumnName("appl_dot");

                    b.Property<string>("ApplType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("AreaService")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("area_service")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("birthday")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CaseType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("case_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CorrHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("corr_hosp_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("CureDot")
                        .HasColumnType("int")
                        .HasColumnName("cure_dot");

                    b.Property<string>("CureEDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("cure_e_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item1")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item2")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item3")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("CureItem4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("cure_item4")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DiagCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("diag_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("DiagDot")
                        .HasColumnType("int")
                        .HasColumnName("diag_dot");

                    b.Property<int?>("DrugDays")
                        .HasColumnType("int")
                        .HasColumnName("drug_days");

                    b.Property<int?>("DrugDot")
                        .HasColumnType("int")
                        .HasColumnName("drug_dot");

                    b.Property<string>("DrugPrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("drug_prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("DsvcCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("dsvc_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("DsvcDot")
                        .HasColumnType("int")
                        .HasColumnName("dsvc_dot");

                    b.Property<int?>("ExamTime")
                        .HasColumnType("int");

                    b.Property<string>("ExamYear")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ExpDot")
                        .HasColumnType("int")
                        .HasColumnName("exp_dot");

                    b.Property<string>("FirstInstructDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FirstTreatDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("func_date")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("func_seq_no")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("FuncType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("func_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("HospDataType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("hosp_data_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("HospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("HospID")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Icd10cmCode3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code3")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd10cmCode4")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd10cm_code4")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code1")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Icd9cmCode2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("icd9cm_code2")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("IdSex")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Id_Sex")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("InctructSerial")
                        .HasColumnType("int");

                    b.Property<string>("InstructApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("InstructExamTime")
                        .HasColumnType("int");

                    b.Property<string>("InstructExamYear")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("MedApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("MetDot")
                        .HasColumnType("int")
                        .HasColumnName("met_dot");

                    b.Property<string>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("ModifyPersonNo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<int?>("PartAmt")
                        .HasColumnType("int")
                        .HasColumnName("part_amt");

                    b.Property<string>("PartCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("part_code")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("PayType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pay_type")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("PrsnId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("prsn_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("RealHospId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("real_hosp_id")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("RelMode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("rel_mode")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("ReleaseApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Remark")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("SeqNo")
                        .HasColumnType("int")
                        .HasColumnName("seq_no");

                    b.Property<string>("SuppArea")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("supp_area")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("TraceApply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("TranDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("tran_date")
                        .IsFixedLength(true);

                    b.Property<int?>("WeekCount")
                        .HasColumnType("int");

                    b.HasKey("DataId", "FeeYm");

                    b.HasIndex("Id", "FeeYm", "HospId", "FuncDate", "Birthday", "MedApply", "WeekCount", "DrugDays")
                        .HasDatabaseName("INX_UOpDtl");

                    b.ToTable("updOpDtl");
                });

            modelBuilder.Entity("SMK.Data.Entity.VwDrData", b =>
                {
                    b.Property<string>("ApplDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("appl_date")
                        .IsFixedLength(true);

                    b.Property<int?>("ApplDot")
                        .HasColumnType("int")
                        .HasColumnName("appl_dot");

                    b.Property<string>("ApplType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_type")
                        .IsFixedLength(true);

                    b.Property<string>("Birthday")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("birthday")
                        .IsFixedLength(true);

                    b.Property<string>("CaseType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("case_type")
                        .IsFixedLength(true);

                    b.Property<int?>("CureDot")
                        .HasColumnType("int")
                        .HasColumnName("cure_dot");

                    b.Property<string>("DataId")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<int?>("DrugDays")
                        .HasColumnType("int")
                        .HasColumnName("drug_days");

                    b.Property<int?>("DrugDot")
                        .HasColumnType("int")
                        .HasColumnName("drug_dot");

                    b.Property<int?>("Examtime")
                        .HasColumnType("int")
                        .HasColumnName("examtime");

                    b.Property<string>("Examyear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("examyear")
                        .IsFixedLength(true);

                    b.Property<string>("FeeYm")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<string>("Firsttreatdate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("firsttreatdate")
                        .IsFixedLength(true);

                    b.Property<string>("FuncDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("func_date")
                        .IsFixedLength(true);

                    b.Property<string>("Hospid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("hospid")
                        .IsFixedLength(true);

                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id")
                        .IsFixedLength(true);

                    b.Property<string>("Medapply")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("medapply")
                        .IsFixedLength(true);

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("name")
                        .IsFixedLength(true);

                    b.Property<string>("RelDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("rel_date")
                        .IsFixedLength(true);

                    b.Property<int?>("Weekcount")
                        .HasColumnType("int")
                        .HasColumnName("weekcount");

                    b.ToView("vwDrData");
                });

            modelBuilder.Entity("SMK.Data.Entity.VwOpData", b =>
                {
                    b.Property<string>("ApplDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("appl_date")
                        .IsFixedLength(true);

                    b.Property<int?>("ApplDot")
                        .HasColumnType("int")
                        .HasColumnName("appl_dot");

                    b.Property<string>("ApplType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("appl_type")
                        .IsFixedLength(true);

                    b.Property<string>("Birthday")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("birthday")
                        .IsFixedLength(true);

                    b.Property<string>("CaseType")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("case_type")
                        .IsFixedLength(true);

                    b.Property<int?>("CureDot")
                        .HasColumnType("int")
                        .HasColumnName("cure_dot");

                    b.Property<string>("DataId")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("data_id");

                    b.Property<int?>("DrugDays")
                        .HasColumnType("int")
                        .HasColumnName("drug_days");

                    b.Property<int?>("DrugDot")
                        .HasColumnType("int")
                        .HasColumnName("drug_dot");

                    b.Property<int?>("Examtime")
                        .HasColumnType("int")
                        .HasColumnName("examtime");

                    b.Property<string>("Examyear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("examyear")
                        .IsFixedLength(true);

                    b.Property<string>("FeeYm")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("fee_ym")
                        .IsFixedLength(true);

                    b.Property<string>("Firsttreatdate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("firsttreatdate")
                        .IsFixedLength(true);

                    b.Property<string>("FuncDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("func_date")
                        .IsFixedLength(true);

                    b.Property<string>("Hospid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("hospid")
                        .IsFixedLength(true);

                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id")
                        .IsFixedLength(true);

                    b.Property<string>("Medapply")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("medapply")
                        .IsFixedLength(true);

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("name")
                        .IsFixedLength(true);

                    b.Property<int?>("RelDate")
                        .HasColumnType("int")
                        .HasColumnName("rel_date");

                    b.Property<int?>("Weekcount")
                        .HasColumnType("int")
                        .HasColumnName("weekcount");

                    b.ToView("vwOpData");
                });
#pragma warning restore 612, 618
        }
    }
}
